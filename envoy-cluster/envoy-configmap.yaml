apiVersion: v1
kind: ConfigMap
metadata:
  name: envoy-config
  namespace: envoy
data:
  envoy.yaml: |
    static_resources:
      listeners:
      - name: listener_0
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 10000
        filter_chains:
        - filters:
          - name: envoy.filters.network.http_connection_manager
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
              stat_prefix: ingress_http
              access_log:
              - name: envoy.access_loggers.file
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  path: /dev/stdout  # or a file path like /var/log/envoy/access.log
                  json_format:
                    http_cf_ipcountry: "%REQ(X-FORWARDED-COUNTRY)%"
                    msec: "%START_TIME(%s.%3f)%"
                    time_iso8601: "%START_TIME%"
                    host: "%REQ(:AUTHORITY)%"
                    remote_addr: "%DOWNSTREAM_REMOTE_ADDRESS_WITHOUT_PORT%"
                    request_time: "%DURATION%"
                    status: "%RESPONSE_CODE%"
                    upstream_addr: "%UPSTREAM_HOST%"
                    upstream_response_length: "%BYTES_RECEIVED%"
                    upstream_response_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                    upstream_status: "%RESPONSE_CODE%"
                    upstream_connect_time: "%RESP(X-ENVOY-UPSTREAM-SERVICE-TIME)%"
                    bytes_sent: "%BYTES_SENT%"
                    body_bytes_sent: "%BYTES_SENT%"
                    http_user_agent: "%REQ(USER-AGENT)%"
                    http_x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                    request_id: "%REQ(X-REQUEST-ID)%"
                    request_method: "%REQ(:METHOD)%"
                    request_uri: "%REQ(:PATH)%"
                    request_length: "%BYTES_RECEIVED%"
                    request_body: "%REQ(BODY)%"
                    request_protocol: "%PROTOCOL%"
                    upstream_service: "%UPSTREAM_CLUSTER%"
              route_config:
                name: local_route
                virtual_hosts:
                - name: local_service
                  domains: ["example.com"]
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: echo_service_cluster
                      timeout: 5s
              http_filters:
              - name: envoy.filters.http.router
                typed_config:
                  "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      clusters:
      - name: echo_service_cluster
        connect_timeout: 0.25s
        type: LOGICAL_DNS
        lb_policy: ROUND_ROBIN
        load_assignment:
          cluster_name: echo_service_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: echo-service
                    port_value: 8080
    admin:
      access_log_path: /tmp/admin_access.log
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9901

